version: "3.9"

services:
  contaxy:
    container_name: contaxy
    build:
      context: ..
      dockerfile: ./Dockerfile
    ports:
      - "127.0.0.1:30010:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - POSTGRES_CONNECTION_URI=postgresql://postgres:postgres@contaxy_postgres:5432/postgres
      - S3_ENDPOINT=s3:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - BACKEND_CORS_ORIGINS=http://localhost:3000
    depends_on:
      - postgres
      - s3

  postgres:
    container_name: contaxy_postgres
    image: postgres:13.2
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  pgweb:
    container_name: contaxy_pgweb
    restart: always
    image: sosedoff/pgweb
    ports:
      - "30012:8081"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@contaxy_postgres:5432/postgres?sslmode=disable
    depends_on:
      - postgres

  s3:
    container_name: contaxy_s3
    image: minio/minio:RELEASE.2021-03-04T00-53-13Z
    command: server /data{1...4}
    ports:
      - "127.0.0.1:30013:9000"

    # contaxy-extension-workspace:
    #  image: contaxy-extension-workspace
    #  restart: always
    #  ports:
    #      - "127.0.0.1:30014:8080"
    #  environment:
    #      - CONTAXY_ENDPOINT=http://contaxy:8080/api
    #      - CONTAXY_DEPLOYMENT_NAME=contaxy-extension-workspace
    #  labels:
    #      ctxy.namespace: "ctxy"
    #      ctxy.deploymentType: "extension"
    #      ctxy.deploymentName: "contaxy-extension-workspace"
    #      ctxy.projectName: "ctxy-global"
    #      ctxy.ui_extension_endpoint: "8080/projects/{env.projectId}/workspace"
    #      ctxy.api_extension_endpoint: "8080/projects/{env.projectId}/workspace"
    #  depends_on:
    #      - contaxy
    #
