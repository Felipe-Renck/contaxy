/**
 * Contaxy API
 * Functionality to create and manage projects, services, jobs, and files.
 *
 * The version of the OpenAPI document: 0.0.0.dev1+main
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OpenIDUserInfo model module.
 * @module model/OpenIDUserInfo
 * @version 0.0.0.dev1+main
 */
class OpenIDUserInfo {
    /**
     * Constructs a new <code>OpenIDUserInfo</code>.
     * @alias module:model/OpenIDUserInfo
     * @param sub {String} Subject - Identifier for the End-User at the Issuer.
     */
    constructor(sub) { 
        
        OpenIDUserInfo.initialize(this, sub);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sub) { 
        obj['sub'] = sub;
    }

    /**
     * Constructs a <code>OpenIDUserInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenIDUserInfo} obj Optional instance to populate.
     * @return {module:model/OpenIDUserInfo} The populated <code>OpenIDUserInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenIDUserInfo();

            if (data.hasOwnProperty('sub')) {
                obj['sub'] = ApiClient.convertToType(data['sub'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('preferred_username')) {
                obj['preferred_username'] = ApiClient.convertToType(data['preferred_username'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Subject - Identifier for the End-User at the Issuer.
 * @member {String} sub
 */
OpenIDUserInfo.prototype['sub'] = undefined;

/**
 * End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences.
 * @member {String} name
 */
OpenIDUserInfo.prototype['name'] = undefined;

/**
 * Shorthand name by which the End-User wishes to be referred to.
 * @member {String} preferred_username
 */
OpenIDUserInfo.prototype['preferred_username'] = undefined;

/**
 * End-User's preferred e-mail address
 * @member {String} email
 */
OpenIDUserInfo.prototype['email'] = undefined;

/**
 * Time the End-User's information was last updated. Number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time.
 * @member {Number} updated_at
 */
OpenIDUserInfo.prototype['updated_at'] = undefined;






export default OpenIDUserInfo;

