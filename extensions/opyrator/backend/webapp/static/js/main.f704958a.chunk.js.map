{"version":3,"sources":["App.jsx","reportWebVitals.js","index.jsx"],"names":["App","valueRef","useRef","className","noValidate","autoComplete","label","variant","inputRef","onClick","url","window","location","pathname","substring","lastIndexOf","global","fetch","method","then","res","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gJAAA,uDA8BeA,IAvBf,WACE,IAAMC,EAAWC,iBAAO,IASxB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sDACA,uBAAMC,YAAU,EAACC,aAAa,MAA9B,UACE,cAAC,IAAD,CAAWC,MAAM,WAAWC,QAAQ,SAASC,SAAUP,IACvD,cAAC,IAAD,CAAQM,QAAQ,YAAYE,QAdf,WACnB,IAAMC,EAAG,UAAMC,OAAOC,SAASC,SAASC,UACtC,EACAH,OAAOC,SAASC,SAASE,YAAY,MAF9B,YAITC,EAAOC,MAAMP,EAAK,CAAEQ,OAAQ,SAAUC,MAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,oB,uJCFrDG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjC,EAAA,EAAD,MAEFkC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f704958a.chunk.js","sourcesContent":["import React, { useRef } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport './App.css';\n\nfunction App() {\n  const valueRef = useRef('');\n  const handleSubmit = () => {\n    const url = `${window.location.pathname.substring(\n      0,\n      window.location.pathname.lastIndexOf('/')\n    )}/deplopy`;\n    global.fetch(url, { method: 'POST' }).then((res) => console.log(res));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Deploy your Opyrator!</p>\n        <form noValidate autoComplete=\"off\">\n          <TextField label=\"File key\" variant=\"filled\" inputRef={valueRef} />\n          <Button variant=\"contained\" onClick={handleSubmit} />\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}